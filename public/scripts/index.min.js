import{initializeApp}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-app.js";import{getAuth,signInWithCustomToken,onAuthStateChanged}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-auth.js";import{getFirestore,doc,getDoc,onSnapshot,updateDoc,increment}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-firestore.js";import{getDatabase,ref,get,child}from"https://www.gstatic.com/firebasejs/9.22.0/firebase-database.js";const firebaseConfig={apiKey:"AIzaSyDD5UGApGmnddV1nCkibQi0yC6ZOpPhWqA",authDomain:"linen-diorama-427712-c4.firebaseapp.com",projectId:"linen-diorama-427712-c4",storageBucket:"linen-diorama-427712-c4.firebasestorage.app",messagingSenderId:"250158598373",appId:"1:250158598373:web:b1637a75fd41fc6f936c0c",measurementId:"G-3JFG7302YG"};if("serviceWorker"in navigator){navigator.serviceWorker.register("service-worker.js").then((function(registration){console.log("Service Worker registrado com sucesso:",registration)})).catch((function(error){console.log("Falha ao registrar o Service Worker:",error)}))}if(!navigator.onLine){document.querySelector(".loader").style.display="none";document.querySelector(".offline").style.display="flex"}const app=initializeApp(firebaseConfig);const auth=getAuth(app);const db=getFirestore(app);let user;const isLocal=window.location.hostname==="localhost";const netlifyEndpoit=isLocal?"http://localhost:8888/.netlify/functions":"https://twitch-mcc.netlify.app/.netlify/functions";const clientId="5fyofmchlg3budslz7ivuouz0u8cff";const overlay=document.querySelector(".overlay-live");const embedElement=document.getElementById("twitch-embed");const hammer=new Hammer(overlay);hammer.get("pinch").set({enable:true});hammer.get("pan").set({direction:Hammer.DIRECTION_ALL,enable:true});let currentScale=1;let initialScale=1;let lastScale=1;let lastX=0;let lastY=0;let isPanning=false;let pinchend=false;const minScale=1;const maxScale=2;let pinchStartX=0;let pinchStartY=0;let pinchLastScale=1;hammer.on("pinchstart",(function(event){pinchStartX=lastX;pinchStartY=lastY;pinchLastScale=currentScale}));hammer.on("pinch",(function(event){let scale=event.scale*pinchLastScale;scale=Math.max(minScale,Math.min(scale,maxScale));if(scale===1){resetPosition()}else{updatePosition(event,scale)}currentScale=scale}));function updatePosition(event,scale){embedElement.style.transition="";const deltaX=(event.center.x-embedElement.offsetWidth/2)/pinchLastScale;const deltaY=(event.center.y-embedElement.offsetHeight/2)/pinchLastScale;lastX=pinchStartX+deltaX*(scale/pinchLastScale);lastY=pinchStartY+deltaY*(scale/pinchLastScale);applyBounds(embedElement,lastX,lastY,scale)}function resetPosition(){embedElement.style.transition="left 0.3s ease, top 0.3s ease";embedElement.style.left="0";embedElement.style.top="0"}hammer.on("pinchend",(function(event){initialScale*=event.scale;lastScale=event.scale}));hammer.on("panstart",(function(event){if(currentScale>1){isPanning=true}}));hammer.on("panmove",(function(event){if(isPanning&&currentScale>1){const offsetX=lastX+event.deltaX;const offsetY=lastY+event.deltaY;applyBounds(embedElement,offsetX,offsetY,currentScale)}}));function applyBounds(element,offsetX,offsetY,scale){const calculateBounds=(originalSize,scale)=>{const scaledSize=originalSize*scale;return(scaledSize-originalSize)/2};const originalWidth=element.offsetWidth;const maxLeft=calculateBounds(originalWidth,scale);if(offsetX<=maxLeft&&offsetX>=-maxLeft){element.style.left=`${offsetX}px`}else{console.warn("Deslocamento horizontal ultrapassa os limites.")}const originalHeight=element.offsetHeight;const maxTop=calculateBounds(originalHeight,scale);if(offsetY<=maxTop&&offsetY>=-maxTop){element.style.top=`${offsetY}px`}else{console.warn("Deslocamento vertical ultrapassa os limites.")}embedElement.style.transform=`scale(${scale})`;console.log({offsetX:offsetX,offsetY:offsetY,withinHorizontalBounds:offsetX>=-maxLeft&&offsetX<=maxLeft,withinVerticalBounds:offsetY>=-maxTop&&offsetY<=maxTop,originalWidth:originalWidth,maxLeft:maxLeft,originalHeight:originalHeight,maxTop:maxTop})}hammer.on("panend",(function(event){if(isPanning){lastX+=event.deltaX;lastY+=event.deltaY;isPanning=false}}));export function loginWithTwitch(){const authUrl="login.html";window.location.href=authUrl}let accessToken;let userId;let channelName;let channelId;let userName;init();async function init(){console.time("Tempo para iniciar");onAuthStateChanged(auth,(async userInfo=>{if(userInfo){user=userInfo;console.log("Usuário está autenticado:",userInfo);userId=userInfo.uid;userName=userInfo.displayName;await getUserData(userInfo.uid);console.timeEnd("Tempo para iniciar")}else{if(navigator.onLine){console.log("Usuário não está autenticado");loginWithTwitch()}}}))}async function getUserData(userId){console.time("Consulta");const docRef=doc(db,"users",userId);try{const docSnap=await getDoc(docRef);console.timeEnd("Consulta");if(docSnap.exists()){const data=docSnap.data();accessToken=data.accessToken;console.log(accessToken);if(!channelName&&!channelId){await getFollowedChannels()}else{createIframe();channelId=await getTwitchChannelId();document.querySelector(".live").style.display="flex";document.getElementById("live-streams").style.display="none";connectChat()}document.querySelector(".page-loader").style.display="none"}else{console.log("Nenhum usuário encontrado!")}}catch(error){console.error("Erro ao obter dados do usuário:",error)}}async function getTwitchChannelId(){const url=`https://api.twitch.tv/helix/users?login=${channelName}`;const fetchChannelData=async()=>{const response=await fetch(url,{method:"GET",headers:{"Client-ID":clientId,Authorization:`Bearer ${accessToken}`}});return response.json()};try{let data=await fetchChannelData();if(data.message==="Invalid OAuth token"){console.log("Token expirado, renovando token.");await renovarTokenFirebase();data=await fetchChannelData()}if(data.data){return data.data[0].id}else{console.error("Canal não encontrado")}}catch(error){console.error("Erro ao buscar ID do canal:",error)}}async function getFollowedChannels(){try{const fetchFollowedChannels=async()=>{const response=await fetch(`https://api.twitch.tv/helix/channels/followed?user_id=${userId}&first=100`,{method:"GET",headers:{"Client-ID":clientId,Authorization:`Bearer ${accessToken}`}});return response.json()};let data=await fetchFollowedChannels();if(data.message==="Invalid OAuth token"){console.log("Token expirado, renovando token.");await renovarTokenFirebase();data=await fetchFollowedChannels()}const followedChannels=data.data;console.log(data);const liveChannels=await getLiveChannels(followedChannels);displayLiveChannels(liveChannels)}catch(error){console.error("Erro ao obter canais seguidos:",error)}}async function getLiveChannels(followedChannels){const liveChannels=[];const userIds=followedChannels.map((channel=>channel.broadcaster_id));const fetchStreams=async()=>{const response=await fetch(`https://api.twitch.tv/helix/streams?user_id=${userIds.join("&user_id=")}`,{method:"GET",headers:{"Client-ID":clientId,Authorization:`Bearer ${accessToken}`}});return response.json()};const fetchUsers=async userIdsToFetch=>{const response=await fetch(`https://api.twitch.tv/helix/users?id=${userIdsToFetch.join("&id=")}`,{method:"GET",headers:{"Client-ID":clientId,Authorization:`Bearer ${accessToken}`}});return response.json()};try{let streamsData=await fetchStreams();if(streamsData.message==="Invalid OAuth token"){console.log("Token expirado, renovando token.");await renovarTokenFirebase();streamsData=await fetchStreams()}if(streamsData.data.length>0){const userIdsToFetch=streamsData.data.map((liveChannel=>liveChannel.user_id));let usersData=await fetchUsers(userIdsToFetch);if(usersData.message==="Invalid OAuth token"){console.log("Token expirado, renovando token.");await renovarTokenFirebase();usersData=await fetchUsers(userIdsToFetch)}const usersInfo=Object.fromEntries(usersData.data.map((user=>[user.id,user])));streamsData.data.forEach((liveChannel=>{const user=usersInfo[liveChannel.user_id];if(user){liveChannels.push({userName:user.display_name,userId:user.id,description:user.description,profileImage:user.profile_image_url,title:liveChannel.title,viewers:liveChannel.viewer_count,thumbnail:liveChannel.thumbnail_url,streamUrl:`https://www.twitch.tv/${user.login}`})}}))}console.log(liveChannels);return liveChannels}catch(error){console.error("Erro ao verificar as lives:",error)}}function displayLiveChannels(liveChannels){const liveStreamsDiv=document.getElementById("live-streams");if(liveChannels.length===0){liveStreamsDiv.innerHTML="<p>Não há lives ao vivo no momento.</p>";return}liveChannels.forEach((liveChannel=>{const streamElement=document.createElement("div");streamElement.classList.add("stream-item");streamElement.innerHTML=`\n        <div class="thumbnail-conteiner">\n        <img class="thumbnail" src="${liveChannel.thumbnail.replace("{width}","1280").replace("{height}","720")}" alt="Capa da stream">\n        </div>\n        <div class="stream-info">\n        <div class="avatar-conteiner">\n        <img class="avatar" src="${liveChannel.profileImage}">\n        </div>\n        <div class="info-text">\n        <h2>${liveChannel.userName}</h2>\n        <p>${liveChannel.title}</p>\n        <p class="viewers">${liveChannel.viewers} espectadores</p>\n        </div>\n        </div>\n        `;streamElement.addEventListener("click",(function(){channelId=liveChannel.userId;channelName=liveChannel.userName;document.querySelector(".live").style.display="flex";document.getElementById("live-streams").style.display="none";createIframe();connectChat()}));liveStreamsDiv.appendChild(streamElement)}));const pageLoader=document.querySelector(".page-loader");pageLoader.style.display="none"}let isFistPlay=true;function createIframe(){try{const embed=new Twitch.Embed("twitch-embed",{width:"100%",height:"100%",channel:channelName,parent:["localhost"],layout:"video",controls:false,muted:false,autoplay:true});let player;embed.addEventListener(Twitch.Embed.VIDEO_READY,(()=>{player=embed.getPlayer()}));const buttonImages={play:`<path d="M7 6v12l10-6z"/>`,pause:`<path d="M8 7h3v10H8zm5 0h3v10h-3z"/>`,mute:`<path d="m7.727 6.313-4.02-4.02-1.414 1.414 18 18 1.414-1.414-2.02-2.02A9.578 9.578 0 0 0 21.999 12c0-4.091-2.472-7.453-5.999-9v2c2.387 1.386 3.999 4.047 3.999 7a8.13 8.13 0 0 1-1.671 4.914l-1.286-1.286C17.644 14.536 18 13.19 18 12c0-1.771-.775-3.9-2-5v7.586l-2-2V2.132L7.727 6.313zM4 17h2.697L14 21.868v-3.747L3.102 7.223A1.995 1.995 0 0 0 2 9v6c0 1.103.897 2 2 2z"/>`,unmute:`<path d="M16 7v10c1.225-1.1 2-3.229 2-5s-.775-3.9-2-5zM4 17h2.697L14 21.868V2.132L6.697 7H4c-1.103 0-2 .897-2 2v6c0 1.103.897 2 2 2z"/>`};embed.addEventListener(Twitch.Embed.VIDEO_PLAY,(function(){if(!isFistPlay)return;isFistPlay=false;document.querySelector(".configs").style.display="block";const qualities=player.getQualities();console.log("Qualidades",qualities);const qualitiesContainer=document.getElementById("qualities");qualitiesContainer.innerHTML="";const form=document.createElement("form");form.classList.add("qualities-form");qualities.forEach((quality=>{const label=document.createElement("label");label.classList.add("quality-label");const radio=document.createElement("input");radio.type="radio";radio.name="quality";radio.value=quality.group;radio.classList.add("quality-radio");radio.addEventListener("change",(function(){player.setQuality(quality.group);const configButton=document.getElementById("config-button");const popup=document.getElementById("config-popup");popup.style.display="none";configButton.style.pointerEvents="auto";configButton.style.cursor="pointer";configButton.disabled=false;popup.style.animation="0.3s fadeAndDownIn";setTimeout((function(){popup.style.animation="";popup.style.display="none"}),300)}));label.textContent=quality.name;label.prepend(radio);form.appendChild(label)}));qualitiesContainer.appendChild(form)}));embed.addEventListener(Twitch.Embed.VIDEO_PLAY,(()=>updateButtonImage("pause")));embed.addEventListener(Twitch.Embed.VIDEO_PAUSE,(()=>updateButtonImage("play")));function updateButtonImage(state){const toggleImg=document.querySelector(".toggle svg");const muteImg=document.querySelector(".mute svg");if(state==="play"||state==="pause"){toggleImg.innerHTML=buttonImages[state]}else if(state==="mute"||state==="unmute"){muteImg.innerHTML=buttonImages[state]}}document.querySelector(".toggle").addEventListener("click",(()=>{player=embed.getPlayer();if(player){if(player.isPaused()){player.play()}else{player.pause()}console.log("Player Paused:",player.isPaused())}}));document.querySelector(".mute").addEventListener("click",(()=>{if(player){player=embed.getPlayer();if(player.getMuted()){player.setMuted(false);updateButtonImage("unmute")}else{player.setMuted(true);updateButtonImage("mute")}console.log("Player Muted:",player.getMuted())}}))}catch(e){console.log("Erro ao iniciar embed:",e)}}let popupElementInAnimation=false;let itemSetting="none";document.querySelector(".back").addEventListener("click",(()=>{switch(itemSetting){case"Qualidade":if(popupElementInAnimation)return;popupElementInAnimation=true;const backButton=document.querySelector(".back");const optionsContainer=document.querySelector(".options");const qualitiesContainer=document.querySelector(".qualities-conteiner");const popupTop=document.querySelector(".popup-top");backButton.style.display="none";qualitiesContainer.style.cssText=`\n            position: absolute;\n            animation: 0.3s swipeRightOut;\n            `;popupTop.style.cssText=`\n            position: absolute;\n            animation: 0.3s slideUpInNoP forwards;\n            `;popup.style.animation="0.3s contract forwards";optionsContainer.style.cssText=`\n            display: block;\n            animation: 0.3s swipeRightIn;\n            `;setTimeout((()=>{qualitiesContainer.style.cssText="display: none;";popup.style.animation="";popupTop.style.cssText="display: none;"}),300);setTimeout((()=>{popupElementInAnimation=false}),600);break;default:alert("Opção desconhecida")}}));const popup=document.getElementById("config-popup");const menuItems=document.querySelectorAll(".options li");menuItems.forEach((item=>{item.addEventListener("click",(event=>{event.stopPropagation();const optionText=item.querySelector("span").innerText;itemSetting=optionText;switch(optionText){case"Qualidade":if(popupElementInAnimation==true)return;popupElementInAnimation=true;document.documentElement.style.setProperty("--current-height",`${popup.scrollHeight}px`);const backButton=document.querySelector(".back");const optionsContainer=document.querySelector(".options");const qualitiesContainer=document.querySelector(".qualities-conteiner");const popupTop=document.querySelector(".popup-top");optionsContainer.style.cssText=`\n                    position: absolute;\n                    animation: 0.3s swipeLeftOut;\n                    `;backButton.style.display="block";qualitiesContainer.style.cssText=`\n                    display: flex;\n                    animation: 0.3s swipeLeftIn forwards;\n                    `;popupTop.style.cssText=`\n                    display: flex;\n                    animation: 0.3s slideDownInNoP forwards;\n                    `;document.documentElement.style.setProperty("--new-height",`${popup.scrollHeight}px`);popup.style.animation="0.3s expand forwards";setTimeout((()=>{optionsContainer.style.cssText="";popup.style.animation="";optionsContainer.style.display="none";popupTop.style.cssText=`\n                        transform: translateY(0);\n                        display: flex;\n                        `}),300);setTimeout((function(){popupElementInAnimation=false}),600);break;default:alert("Opção desconhecida")}}))}));const configButton=document.getElementById("config-button");const closePopup=document.querySelector(".popup-close");configButton.addEventListener("click",(function(event){event.stopPropagation();popup.style.display="flex";popup.style.animation="0.3s fadeAndUpIn";setTimeout((function(){popup.style.animation=""}),300);configButton.style.pointerEvents="none";configButton.style.cursor="";configButton.disabled=true;const optionsContainer=document.querySelector(".options");const qualitiesContainer=document.querySelector(".qualities-conteiner");const backButton=document.querySelector(".back");optionsContainer.style.display="block";qualitiesContainer.style.display="none";backButton.style.display="none";console.log("Esse botão está sendo clicado por algum motivo!")}));closePopup.addEventListener("click",(function(event){event.stopPropagation();popup.style.animation="0.3s fadeAndDownIn";setTimeout((function(){popup.style.animation="";popup.style.display="none"}),300);configButton.style.pointerEvents="auto";configButton.style.cursor="pointer";configButton.disabled=false}));window.addEventListener("click",(function(event){if(event.target!==configButton){popup.style.animation="0.3s fadeAndDownIn";setTimeout((function(){popup.style.animation="";popup.style.display="none"}),300);configButton.style.pointerEvents="auto";configButton.style.cursor="pointer";configButton.disabled=false}}));popup.addEventListener("click",(e=>{e.stopPropagation()}));const chatDiv=document.getElementById("messages");async function fetchBadges(){const headers={"Client-ID":clientId,Authorization:`Bearer ${accessToken}`};const fetchBadgesData=async url=>{const response=await fetch(url,{headers:headers});return response.json()};try{const fetchWithTokenCheck=async url=>{let badges=await fetchBadgesData(url);if(badges.message==="Invalid OAuth token"){console.log("Token expirado, renovando token.");await renovarTokenFirebase();badges=await fetchBadgesData(url)}return badges};const[globalBadges,channelBadges]=await Promise.all([fetchWithTokenCheck("https://api.twitch.tv/helix/chat/badges/global"),fetchWithTokenCheck(`https://api.twitch.tv/helix/chat/badges?broadcaster_id=${channelId}`)]);return{globalBadges:globalBadges.data,channelBadges:channelBadges.data}}catch(error){console.error("Erro ao buscar badges:",error)}}let autoScroll=true;let messagesCount=0;async function connectChat(){const[badges,allEmotesExtension]=await Promise.all([fetchBadges(),getAllEmotes(channelId)]);console.log(allEmotesExtension);console.log(badges);const oauthToken=`oauth:${accessToken}`;const socket=new WebSocket("wss://irc-ws.chat.twitch.tv:443");socket.onopen=()=>{console.log("Conectado ao chat da Twitch!");socket.send("CAP REQ :twitch.tv/tags twitch.tv/commands twitch.tv/membership");socket.send(`PASS ${oauthToken}`);socket.send(`NICK ${userName}`);socket.send(`JOIN #${channelName}`)};socket.onmessage=async message=>{const data=message.data;if(data.startsWith("PING")){console.log("Recebido PING do servidor. Enviando PONG...");socket.send("PONG :tmi.twitch.tv")}else if(data.includes("PRIVMSG")){const tagsObject=Object.fromEntries(data.split(";").map((tag=>tag.split("="))));const match=data.match(/PRIVMSG #[\w]+ :(.+)/);const message=match[1];const emotes=tagsObject["emotes"].split("/");let formattedMessage;formattedMessage=await replaceEmotes(message,emotes,allEmotesExtension);const userBadges=tagsObject["badges"];const badgeIcons=renderBadges(userBadges,badges);const messageElement=document.createElement("div");messageElement.classList.add("chat-message");messageElement.innerHTML=`\n                    ${badgeIcons?`<span class="badges">${badgeIcons}</span>`:""}\n                    <strong style="color: ${tagsObject["color"]||generateUsernameColor(tagsObject["display-name"])}">${tagsObject["display-name"]}:</strong> ${formattedMessage}\n                    `;chatDiv.appendChild(messageElement);if(!autoScroll){messagesCount++;const back=document.querySelector(".back-down");const backText=document.getElementById("backText");if(messagesCount>1){backText.textContent=`${messagesCount} novas mensagens`}else{backText.textContent=`${messagesCount} nova mensagem`}backText.style.display="block";back.style.display="flex";back.style.animation="0.3s fadeIn forwards"}scrollDown()}};socket.onerror=error=>{console.error("Erro no WebSocket:",error)};socket.onclose=e=>{console.log("Desconectado do chat da Twitch",e)}}function generateUsernameColor(username){console.log(username);let hash=0;for(let i=0;i<username.length;i++){hash=username.charCodeAt(i)+((hash<<5)-hash)}let color="#";for(let i=0;i<3;i++){const value=hash>>i*8&255;color+=("00"+value.toString(16)).slice(-2)}return color}async function get7TVGlobalEmotes(){const response=await fetch("https://7tv.io/v3/emote-sets/global");if(!response.ok){throw new Error("Falha ao obter emotes globais do 7TV")}const data=await response.json();return data}async function get7TVChannelEmotes(channelId){const response=await fetch(`https://7tv.io/v3/users/twitch/${channel}`);if(!response.ok){throw new Error(`Falha ao obter emotes do canal ${channelId} do 7TV`)}const data=await response.json();return data}async function getBTTVGlobalEmotes(){const response=await fetch("https://api.betterttv.net/3/cached/emotes/global");if(!response.ok){throw new Error("Falha ao obter emotes globais do BTTV")}const data=await response.json();return data}async function getBTTVChannelEmotes(channelId){const response=await fetch(`https://api.betterttv.net/3/cached/users/twitch/${channelId}`);if(!response.ok){throw new Error(`Falha ao obter emotes do canal ${channelId} do BTTV`)}const data=await response.json();return data}async function getAllEmotes(channelId){try{const[global7TV,globalBTTV,channel7TV,channelBTTV]=await Promise.all([get7TVGlobalEmotes().catch((()=>[])),getBTTVGlobalEmotes().catch((()=>[])),get7TVChannelEmotes(channelId).catch((()=>[])),getBTTVChannelEmotes(channelId).catch((()=>[]))]);return{global7TV:global7TV,globalBTTV:globalBTTV,channel7TV:channel7TV,channelBTTV:channelBTTV}}catch(error){console.error("Erro ao obter emotes:",error);return{global7TV:[],globalBTTV:[],channel7TV:[],channelBTTV:[]}}}function copiarTexto(texto){const textarea=document.createElement("textarea");textarea.value=texto;document.body.appendChild(textarea);textarea.select();try{document.execCommand("copy");console.log("Texto copiado com sucesso!")}catch(err){console.error("Falha ao copiar o texto: ",err)}document.body.removeChild(textarea)}function escapeHtml(str){return str.replace(/[&<>"']/g,(function(match){const escapeMap={"&":"&amp;","<":"&lt;",">":"&gt;",'"':"&quot;","'":"&apos;"};return escapeMap[match]}))}async function replaceEmotes(message,emotesId,allEmotes){let result=message;const markers={};if(emotesId){emotesId.forEach((emote=>{const[emoteName,positions]=emote.split(":");if(positions){const positionList=positions.split(",");positionList.forEach(((position,index)=>{const[start,end]=position.split("-").map(Number);const emoteText=Array.from(message).slice(start,end+1).join("");const marker=`__EMOTE_${emoteName}_${index}__`;markers[marker]=`<img class="emote" src="https://static-cdn.jtvnw.net/emoticons/v2/${emoteName}/default/dark/2.0" alt="${emoteName}">`;result=result.replace(emoteText,marker)}))}}))}const replaceWithEmoteImage=(emoteCode,emoteId,imgSize,platform)=>{const emoteRegex=new RegExp(`(?<=\\s|^)${emoteCode}(?=\\s|$)`,"g");const baseUrl=platform==="bttv"?`https://cdn.betterttv.net/emote/${emoteId}/${imgSize}`:`https://cdn.7tv.app/emote/${emoteId}/${imgSize}`;const marker=`__EMOTE_${emoteCode}__`;markers[marker]=`<img class="emote" src="${baseUrl}" alt="${emoteCode}">`;result=result.replace(emoteRegex,marker)};if(allEmotes.global7TV?.emotes){Object.values(allEmotes.global7TV.emotes).forEach((emote=>{replaceWithEmoteImage(emote.name,emote.id,"4x","7tv")}))}if(Array.isArray(allEmotes.globalBTTV)){allEmotes.globalBTTV.forEach((emote=>{replaceWithEmoteImage(emote.code,emote.id,"3x","bttv")}))}if(allEmotes.channel7TV?.emotes){Object.values(allEmotes.channel7TV.emotes).forEach((emote=>{replaceWithEmoteImage(emote.name,emote.id,"4x","7tv")}))}if(allEmotes.channelBTTV?.channelEmotes){allEmotes.channelBTTV.channelEmotes.forEach((emote=>{replaceWithEmoteImage(emote.code,emote.id,"3x","bttv")}))}Object.keys(markers).forEach((marker=>{result=result.replace(new RegExp(marker,"g"),markers[marker])}));return result}function renderBadges(userBadges,badges){if(!userBadges)return"";const badgeList=userBadges.split(",");let badgeIcons="";badgeList.forEach((badge=>{const[badgeKey,badgeVersion]=badge.split("/");const badgeData=findBadge(badgeKey,badgeVersion,badges);if(badgeData){badgeIcons+=`<img src="${badgeData.image_url_4x}" alt="${badgeKey}" class="badge-icon"> `}}));return badgeIcons}function findBadge(badgeKey,badgeVersion,badges){const channelBadge=badges.channelBadges.find((badge=>badge.set_id===badgeKey));if(channelBadge){const version=channelBadge.versions.find((v=>v.id===badgeVersion));if(version)return version}const globalBadge=badges.globalBadges.find((badge=>badge.set_id===badgeKey));if(globalBadge){const version=globalBadge.versions.find((v=>v.id===badgeVersion));if(version)return version}return null}const messages=document.getElementById("messages");let isTouch=false;function scrollDown(){if(autoScroll)messages.scrollTo({top:messages.scrollHeight,behavior:"smooth"})}messages.addEventListener("scroll",(()=>{if(!isTouch)return;const back=document.querySelector(".back-down");if(isNearBottom()&&!autoScroll){autoScroll=true;back.style.animation="0.3s fadeOut forwards";messagesCount=0;setTimeout((function(){document.querySelector(".back-down").style.display="none"}),300)}else if(!isNearBottom()&&autoScroll){autoScroll=false;const backText=document.getElementById("backText");backText.style.display="none";back.style.display="flex";back.style.animation="0.3s fadeIn forwards"}}));messages.addEventListener("touchmove",(()=>isTouch=true));messages.addEventListener("touchend",(()=>isTouch=false));function isNearBottom(){return messages.scrollHeight-messages.scrollTop-messages.clientHeight<=20}const backDown=document.querySelector(".back-down");backDown.addEventListener("click",(function(){backDown.style.display="none";messagesCount=0;autoScroll=true;messages.scrollTop=messages.scrollHeight}));async function renovarTokenFirebase(){console.time("Renovar token");const firebaseAuthToken=await user.getIdToken(true);const url=`${netlifyEndpoit}/renew-token`;try{const response=await fetch(url,{method:"GET",headers:{Authorization:`Bearer ${firebaseAuthToken}`,"Content-Type":"application/json"}});if(!response.ok){throw new Error(`Erro ao renovar o token: ${response.statusText}`)}const data=await response.json();console.log(data);accessToken=data.access_token;console.timeEnd("Renovar token")}catch(error){console.error("Erro ao fazer a solicitação:",error)}}let orientation;function verificarOrientacao(){if(window.matchMedia("(orientation: portrait)").matches){console.log("Modo retrato");orientation="portrait"}else if(window.matchMedia("(orientation: landscape)").matches){console.log("Modo paisagem");orientation="landscape"}}verificarOrientacao();window.addEventListener("resize",verificarOrientacao);let clickTimeout=null;let overlayClickCount=0;function showElements(){const infoElement=document.querySelector(".info");const controlsElement=document.querySelector(".controls");infoElement.style.display="flex";controlsElement.style.display="flex";infoElement.style.animation="0.3s fadeIn forwards";controlsElement.style.animation="0.3s fadeIn forwards"}function hideElements(){const infoElement=document.querySelector(".info");const controlsElement=document.querySelector(".controls");infoElement.style.animation="0.3s fadeOut forwards";controlsElement.style.animation="0.3s fadeOut forwards";setTimeout((function(){infoElement.style.display="none";controlsElement.style.display="none"}),300)}let isVisibleChat=true;let isVisibleOverlay=true;document.querySelector(".overlay-live").addEventListener("click",(()=>{overlayClickCount++;clearTimeout(clickTimeout);clickTimeout=setTimeout((()=>{if(overlayClickCount===1){if(isVisibleOverlay==true){hideElements()}else{showElements()}isVisibleOverlay=!isVisibleOverlay}overlayClickCount=0}),500);if(overlayClickCount>1){if(orientation=="landscape"){if(isVisibleChat==true){ocultarChat()}else{exibirChat()}isVisibleChat=!isVisibleChat}overlayClickCount=0}}));function exibirChat(){const chatElement=document.getElementById("chat");if(chatElement){chatElement.style.display="flex";const liveVideo=document.querySelector(".live-video");liveVideo.style.width="70%"}}function ocultarChat(){const chatElement=document.getElementById("chat");if(chatElement){chatElement.style.display="none";const liveVideo=document.querySelector(".live-video");liveVideo.style.width="100%"}}const fullscreenBtn=document.getElementById("fullscreenBtn");const liveElement=document.getElementById("liveElement");const fullScreen=document.querySelector(".fullscreen svg");function toggleFullscreen(){const requestFullscreen=liveElement.requestFullscreen||liveElement.mozRequestFullScreen||liveElement.webkitRequestFullscreen||liveElement.msRequestFullscreen;const exitFullscreen=document.exitFullscreen||document.mozCancelFullScreen||document.webkitExitFullscreen||document.msExitFullscreen;const svgPath=`<path d="M10 4H8v4H4v2h6zM8 20h2v-6H4v2h4zm12-6h-6v6h2v-4h4zm0-6h-4V4h-2v6h6z"/>`;const defaultSvgPath=`<path d="M5 5h5V3H3v7h2zm5 14H5v-5H3v7h7zm11-5h-2v5h-5v2h7zm-2-4h2V3h-7v2h5z"/>`;if(!document.fullscreenElement){(requestFullscreen?liveElement.requestFullscreen():Promise.reject()).then((()=>{fullScreen.innerHTML=svgPath})).catch((()=>{console.log("Erro ao tentar entrar em tela cheia")}))}else{(exitFullscreen?document.exitFullscreen():Promise.reject()).then((()=>{fullScreen.innerHTML=defaultSvgPath})).catch((()=>{console.log("Erro ao tentar sair da tela cheia")}))}}fullscreenBtn.addEventListener("click",toggleFullscreen);